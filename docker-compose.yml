version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "3307:3306"
    volumes:
      - ./Backend/DataBases/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    networks:
      - auth-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  userauth:
    build:
      context: ./Backend/Domain/Users/UserAuth
    container_name: userauth
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=usersdb
      - DB_PORT=3306
      - PORT=3000
    networks:
      - auth-net

  getuser-service:
    build:
      context: ./Backend/Domain/Users/GetUser
    container_name: getuser
    ports:
      - "3002:3002"
    depends_on:
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=usersdb
      - DB_PORT=3306
      - PORT=3002
    networks:
      - auth-net

  updateuser-service:
    build:
      context: ./Backend/Domain/Users/UpdateUser
    container_name: updateuser
    ports:
      - "3003:3003"
    depends_on:
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=usersdb
      - DB_PORT=3306
      - PORT=3003
    networks:
      - auth-net

  deleteuser-service:
    build:
      context: ./Backend/Domain/Users/DeleteUser
    container_name: deleteuser
    ports:
      - "3004:3004"
    depends_on:
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=usersdb
      - DB_PORT=3306
      - PORT=3004
    networks:
      - auth-net

  userauthjwt-service:
    build:
      context: ./Backend/Domain/Users/UserAuthentication
    container_name: userauthjwt
    ports:
      - "3005:3005"
    depends_on:
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=usersdb
      - DB_PORT=3306
      - PORT=3005
      - JWT_SECRET=supersecretkey
    networks:
      - auth-net

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - auth-net

  usernotification-service:
    build:
      context: ./Backend/Domain/Users/UserNotification
    container_name: usernotification
    ports:
      - "3006:3006"
    depends_on:
      - redis
    environment:
      - PORT=3006
      - REDIS_URL=redis://redis:6379
    networks:
      - auth-net

  create-item-service:
    build:
      context: ./Backend/Domain/InventoryServices/CreateItem
    container_name: create-item-service
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - PORT=8080
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventorydb
      - DB_USER=root
      - DB_PASSWORD=1234
    networks:
      - auth-net

  update-item-service:
    build:
      context: ./Backend/Domain/InventoryServices/UpdateItem
    container_name: update-item-service
    ports:
      - "8082:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - PORT=8080
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventorydb
      - DB_USER=root
      - DB_PASSWORD=1234
    networks:
      - auth-net

  delete-item-service:
    build:
      context: ./Backend/Domain/InventoryServices/DeleteItem
    container_name: delete-item-service
    ports:
      - "8084:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - PORT=8080
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventorydb
      - DB_USER=root
      - DB_PASSWORD=1234
    networks:
      - auth-net
    
  get-item-service:
    build:
      context: ./Backend/Domain/InventoryServices/GetItem
    container_name: get-item-service
    ports:
      - "8083:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - PORT=8080
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventorydb
      - DB_USER=root
      - DB_PASSWORD=1234
    networks:
      - auth-net

volumes:
  mysql_data:

networks:
  auth-net:
    driver: bridge
